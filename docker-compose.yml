version: '3.8'

services:
  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - qa-automation-network

  # Frontend Angular Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - API_BASE_URL=http://backend:8080
    networks:
      - qa-automation-network

  # Spring Boot Admin Server (Optional)
  admin-server:
    image: codecentric/spring-boot-admin:3.1.8
    ports:
      - "8081:8080"
    environment:
      - SERVER_PORT=8080
    networks:
      - qa-automation-network

  # Prometheus for Metrics (Optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - qa-automation-network

  # Grafana for Dashboards (Optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - qa-automation-network

networks:
  qa-automation-network:
    driver: bridge

volumes:
  grafana-storage: